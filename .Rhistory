"
nchar("This world is but a canvas to our imagination.")
dbGetQuery(db, "INSERT INTO Content VALUES('This world is but a canvas to our imagination.', 'Henry Thoreau', '', 46")
dbGetQuery(db, "INSERT INTO Content VALUES('This world is but a canvas to our imagination.', 'Henry Thoreau', '', 46)")
dbWriteTable(db, "Content", temp, overwrite = T)
View(dbReadTable(db, "Content"))
dbGetQuery(db, "INSERT INTO Content VALUES('This world is but a canvas to our imagination.', 'Henry Thoreau', '', 46)")
dbGetQuery(db, "INSERT INTO Content VALUES(-1, 'This world is but a canvas to our imagination.', 'Henry Thoreau', '', 46)")
View(dbReadTable(db, "Content"))
dbGetQuery(db, "SELECT ID FROM Content WHERE row_number<5")
dbListFields(db, "Content")
dbWriteTable(db, "Content", temp, overwrite = T, row.names = F)
View(dbReadTable(db, "Content"))
dbGetQuery(db, "SELECT Count(*) FROM Content")
a <- dbGetQuery(db, "SELECT Count(*) FROM Content")
a
a + 5
class(a)
as.integer(dbGetQuery(db, "SELECT Count(*) FROM Content"))
class(as.integer(dbGetQuery(db, "SELECT Count(*) FROM Content")))
index <- as.integer(dbGetQuery(db, "SELECT Count(*) FROM Content")) + 1
index
text <- "I can resist anything but temptation."
author <- "Oscar Wilde"
category <- ""
char_count <- nchar(text)
nchar
char_count
index <- as.integer(dbGetQuery(db, "SELECT Count(*) FROM Content")) + 1
index
dbGetQuery(db, paste("INSERT INTO Content VALUES(",index,",\'",
text, "\', \'",
author, "\', \'",
category, "\', ",
char_count,");", sep = ""))
View(dbReadTable(db, "Content"))
View(dbReadTable(db, "Content"))
#' Adds input content to the filtered and categorized database.
add_quote_manual <- function(text, category = "", author = "") {
#connect to database
library(RSQLite)
db <- dbConnect(SQLite(), "Auto_Generation.sqlite")
#verify connection
if (dbIsValid(db) & dbExistsTable(db, "Content")) {
continue <- TRUE
while(continue == TRUE) {
#calculate character count of text
char_count <- nchar(text)
#calculate index - adds 1 to the number of rows of the table
index <- as.integer(dbGetQuery(db, "SELECT Count(*) FROM Content")) + 1
#clean inputs
library(magrittr)
library(stringr)
text <- str_trim(text)
author <- str_trim(author)
category <- category %>% str_to_lower() %>% str_trim()
#add to database
dbGetQuery(db, paste("INSERT INTO Content VALUES(",index,",\'",
text, "\', \'",
author, "\', \'",
category, "\', ",
char_count,");", sep = ""))
#ask if user wants to continue inputting quotes
print("Would you like to continue inputting quotes? (y or n) : ")
repeat {
continue <- readline() %>% str_to_lower() %>% str_trim()
if (continue == "y") {
continue <- TRUE
} else if (continue == 'n'| continue =="") {
continue <- FALSE
} else {
print("Invalid input. Input y to continue adding quotes. To end the function, input n or press ENTER.")
}
if (continue == TRUE | continue == FALSE)
break
}
#get next piece of content
if (continue == TRUE) {
print("Enter the text of the content: ")
text <- readline()
print("Enter the author of the content (If none, press ENTER)")
author <- readline()
print("Enter the category (If none, press ENTER)")
category <- readline()
}
}
} else {
stop("Error connecting to the database.")
}
}
add_quote_manual("Knowledge speaks, but wisdom listens.", "", "Jimi Hendrix")
text <- "Knowledge speaks, but wisdom listens."
author <- "Jimi Hendrix"
category <- ""
char_count <- nchar(text)
index <- as.integer(dbGetQuery(db, "SELECT Count(*) FROM Content")) + 1
index
View(dbReadTable(db, "Content"))
dbGetQuery(db, paste("INSERT INTO Content VALUES(",index,",\'",
text, "\', \'",
author, "\', \'",
category, "\', ",
char_count,");", sep = ""))
View(dbReadTable(db, "Content"))
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/add_quote.R', echo=TRUE)
add_quote_manual("Knowledge speaks, but wisdom listens.", "", "Jimi Hendrix")
debugSource('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/add_quote.R', echo=TRUE)
View(dbReadTable(db, "Content"))
add_quote_manual("No pressure, no diamonds.", "", "Mary Case")
add_quote_manual("No pressure, no diamonds.", "", "Mary Case")
add_quote_manual("No pressure, no diamonds.", "", "Mary Case")
index
add_quote_manual("No pressure, no diamonds.", "", "Mary Case")
a <- dbReadTable(db, "Content")
View(a)
index <- as.integer(dbGetQuery(db, "SELECT Count(*) FROM Content")) + 1
index
add_quote_manual("No pressure, no diamonds.", "", "Mary Case")
debugSource('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/add_quote.R', echo=TRUE)
add_quote_manual("No pressure, no diamonds.", "", "Mary Case")
?rm
rm(list = ls())
add_quote_manual("No pressure, no diamonds.", "", "Mary Case")
debugSource('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/add_quote.R', echo=TRUE)
add_quote_manual("No pressure, no diamonds.", "", "Mary Case")
dbDisconnect(db)
db <- dbConnect(SQLite(), "Auto_Generation.sqlite")
dbDisconnect(db)
dbListConnections(db)
db <- dbConnect(SQLite(), "Auto_Generation.sqlite")
dbIsValid(db) & dbExistsTable(db, "Content")
continue <- TRUE
text <- "No pressure, no diamonds."
author <- "Mary Case"
char_count <- nchar(text)
category <- ""
char_count <- nchar(text)
#calculate index - adds 1 to the number of rows of the table
index <- as.integer(dbGetQuery(db, "SELECT Count(*) FROM Content")) + 1
View(dbReadTable(db, "Content"))
temp <- dbReadTable(db, "Content")
View(temp)
temp <- temp[,-1]
temp$ID <- 1:nrow(temp)
dbWriteTable(db, "Content", temp, overwrite = T)
db <- dbConnect(SQLite(), "Auto_Generation.sqlite")
dbWriteTable(db, "Content", temp, overwrite = T)
dbDisconnect(db)
dbDisconnect(db)
db <- dbConnect(SQLite(), "Auto_Generation.sqlite")
dbWriteTable(db, "Content", temp, overwrite = T)
dbGetQuery(db, paste("INSERT INTO Content VALUES(",index,",\'",
text, "\', \'",
author, "\', \'",
category, "\', ",
char_count,");", sep = ""))
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/add_quote.R', echo=TRUE)
db <- dbConnect(SQLite(), "Auto_Generation.sqlite")
library(RSQLite)
db <- dbConnect(SQLite(), "Auto_Generation.sqlite")
temp <- dbReadTable(db, "Content")
a
phew <- read.csv("Phew.csv")
View(phew)
sapply(phew, class)
phew <- read.csv("Phew.csv")
phew <- read.csv("Phew.csv")
phew <- read.csv("Phew.csv")
sapply(phew, class)
phew$Text <- as.character(phew$Text)
phew$Author <- as.character(phew$Author)
phew$Category <- as.character(phew$Category)
sapply(phew, class)
dbListTables(db)
dbWriteTable(db, "Content", phew)
a <- dbReadTable(db, "Content")
View(a)
dbListFields(db, "Content")
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/add_quote.R', echo=TRUE)
add_quote_manual("No pressure, no diamonds.", "", "Mary Case")
View(dbReadTable(db, "Content"))
add_quote_manual("We build too many walls and not enough bridges.", "wisdom", "Issac Newton")
View(dbReadTable(db, "Content"))
?grep
text <- "Can't"
text
text <- gsub("\'", "\\\'", text)
text
"\"
""
"
"\\\"
"
"\\"
"\"
"
print("\\")
"Hi.\nHi"
"\'"
text <- gsub("\'", "\\\'", text)
text
text
grep("\'", "\\")
grep("\'", "Can't")
text <- gsub("\'", "\\\"", text)
text
text <- gsub("\'", "\\'"", text)
""
text <- gsub("\'", "\\'", text)
text
text <- "Can't"
text <- gsub("\'", "\\'", text)
text
print(text)
cat(text)
text <- gsub("\'", "\\\'", text)
text
text <- gsub("\'", "\\\"", text)
text
gsub("\"", "\'", text)
View(dbReadTable(db, "Content"))
text <- "It's kind of fun to do the impossible."
author <- "Walt Disney"
text <- gsub("\'", "\\'", text)
index <- as.integer(dbGetQuery(db, "SELECT Count(*) FROM Content")) + 1
text <- str_trim(text)
author <- str_trim(author)
category <- category %>% str_to_lower() %>% str_trim()
#add escape characters for single quotes
text <- gsub("\'", "\\'", text)
#add to database
dbGetQuery(db, paste("INSERT INTO Content VALUES(",index,",\'",
text, "\', \'",
author, "\', \'",
category, "\', ",
char_count,");", sep = ""))
category <- ""
dbGetQuery(db, paste("INSERT INTO Content VALUES(",index,",\'",
text, "\', \'",
author, "\', \'",
category, "\', ",
char_count,");", sep = ""))
char_count <- nchar(text)
dbGetQuery(db, paste("INSERT INTO Content VALUES(",index,",\'",
text, "\', \'",
author, "\', \'",
category, "\', ",
char_count,");", sep = ""))
dbGetQuery(db, paste("INSERT INTO Content VALUES(",index,",\"",
text, "\", \'",
author, "\', \'",
category, "\', ",
char_count,");", sep = ""))
View(dbReadTable(db, "Content"))
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/add_quote.R', echo=TRUE)
add_quote_manual("Courage doeson't always roar.", "", "Mary Anne Radmacher")
View(dbReadTable(db, "Content"))
dbSendQuery(db, "UPDATE Content SET Text = 'Courage doesn't always roar.' WHERE ID = 68")
dbSendQuery(db, "UPDATE Content SET Text = Courage doesn't always roar. WHERE ID = 68")
dbSendQuery(db, "UPDATE Content SET Text = Courage doesn\'t always roar. WHERE ID = 68")
dbSendQuery(db, "UPDATE Content SET Text = Courage doesn\\'t always roar. WHERE ID = 68")
dbSendQuery(db, "DELETE FROM Content WHERE ID = 68")
add_quote_manual("Courage doesn't always roar.", "", "Mary Anne Radmacher")
View(dbReadTable(db, "Content"))
}
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/autogen_api.R', echo=TRUE)
r <- plumb("autogen_api.R")
library(plumber)
getDate <- function() {
Sys.Date()
}
r <- plumb("autogen_api.R")
r$run(port=8000)
r <- plumb("quote_search.R")
r$run(port=8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r <- plumb("autogen_api.R")
r$run(port=8000)
r <- plumb(quote_search.R)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r <- plumb(quote_search.R)
getwd()
r <- plumb(qutogen_api.R)
r <- plumb(autogen_api.R)
library(plumber)
r <- plumb(autogen_api.R)
r <- plumb(autogen_api.R)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/autogen_api.R', echo=TRUE)
r <- plumb("autogen_api.R")
r$run(port=8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("Test.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r$run(port = 8000)
r <- plumb("Test.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("Test.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("Test.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("Test.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("Test.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("Test.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("Test.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("Test.R")
r$run(port = 8000)
r <- plumb("quote_search.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("quote_search.R")
r$run(port = 8000)
r <- plumb("quote_search.R")
r$run(port = 8000)
View(dbReadTable(db, "Content"))
library(RSQLite)
db <- dbConnect(SQLite(), "Auto_Generation.sqlite")
View(dbReadTable(db, "Content"))
quote_search("mountain")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r$run(port = 8000)
dbGetQuery(db, paste("SELECT * FROM Content WHERE Text LIKE \'%", search_term, "%\'AND Char_Count <",char_count))
search_term <- mountain
search_term <- "mountain"
char_count <- 300
dbGetQuery(db, paste("SELECT * FROM Content WHERE Text LIKE \'%", search_term, "%\'AND Char_Count <",char_count))
dbGetQuery(db, paste("SELECT * FROM Content WHERE Text LIKE \'%", "mountain", "%\'AND Char_Count <",300))
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r <- plumb("quote_search.R")
r$run(port = 8000)
print(  dbGetQuery(db, paste("SELECT * FROM Content WHERE Text LIKE \'%", "mountain", "%\'AND Char_Count <",300))
)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r <- plumb("quote_search.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r <- plumb("quote_search.R")
r$run(port = 8000)
dbExistsTable(db, "Content")
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r <- plumb("quote_search.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r <- plumb("quote_search.R")
r$run(port = 8000)
content <- dbGetQuery(db, paste("SELECT * FROM Content WHERE Text LIKE \'%", search_term, "%\'AND Char_Count <",char_count,
" OR Author LIKE \'%", search_term, "%\'AND Char_Count <",char_count,
" OR Category LIKE \'%", search_term, "%\'AND Char_Count <",char_count,";", sep =""))
content
r$run(port = 8000)
debugSource('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r <- plumb("quote_search.R")
r$run(port = 8000)
debugSource('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_search.R', echo=TRUE)
r <- plumb("quote_search.R")
r$run(port = 8000)
# r <- plumb("quote_all.R")
# r$run(port = 8000)
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_all.R', echo=TRUE)
r <- plumb("quote_all.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_category.R', echo=TRUE)
r <- plumb("quote_category.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/Test.R', echo=TRUE)
r <- plumb("quote_category.R")
r$run(port = 8000)
r <- plumb("quote_category.R")
r$run(port = 8000)
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/add_quote.R', echo=TRUE)
r <- plumb("add_quote.R")
r$run(port = 8000)
View(dbReadTable(db, "Content"))
ID <- c(1,3,5)
paste("DELETE FROM Content WHERE id = ", i, sep = "")
for (i in ID) {
paste("DELETE FROM Content WHERE id = ", i, sep = "")
}
for (i in ID) {
print(paste("DELETE FROM Content WHERE id = ", i, sep = ""))
}
dbGetQuery(db, paste("DELETE FROM Content WHERE id = ", 69, sep = ""))
View(dbReadTable(db, "Content"))
add_quote_manual("bad")
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/edit_table.R', echo=TRUE)
View(dbReadTable(db, "Content"))
remove_row(c(69,70,71))
View(dbReadTable(db, "Content"))
add_quote_manual("hi")
remove_row(69)
View(dbReadTable(db, "Content"))
add_quote_manual("hi")
View(dbReadTable(db, "Content"))
remove_row(69)\
remove_row(69)
View(dbReadTable(db, "Content"))
field <- Author
field <- "Author"
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/edit_table.R', echo=TRUE)
edit_row(6, "ID", -1)
str_to_title("CHar_Count")
str_to_title("ID")
field
field <- "author"
ID
ID <- 6
edit <- -1
field <- field %>% str_to_title() %>% str_trim()
field
print(paste("UPDATE Content SET ", field, " = ", edit, "WHERE ID = ", ID, sep = ""))
numchar("Being arrogant or selfish in competition or life will harm yourself and will impede your goals.")
nchar("Being arrogant or selfish in competition or life will harm yourself and will impede your goals.")
add_quote_manual("Life is about making an impact, not making an income.", "business", "Kevin Kruse")
View(dbReadTable(db, "Content"))
remove_row(c(69))
View(dbReadTable(db, "Content"))
field <- "category"
ID <- 72
edit <- 'business'
dbGetQuery(db, paste("UPDATE Content SET ", field, " = ", edit, " WHERE ID = ", ID, sep = ""))
field
paste("UPDATE Content SET ", field, " = ", edit, " WHERE ID = ", ID, sep = "")
field <- field %>% str_to_title() %>% str_trim()
dbGetQuery(db, paste("UPDATE Content SET ", field, " = ", edit, " WHERE ID = ", ID, sep = ""))
dbGetQuery(db, paste("UPDATE Content SET ", field, " = '", edit, "' WHERE ID = ", ID, sep = ""))
View(dbReadTable(db, "Content"))
char_count <- 300
paste("UPDATE Content SET Char_count = ", char_count, "' WHERE ID = ", ID, sep = "")
dbGetQuery(db, "SELECT Author FROM Content WHERE ID = 6")
a <- dbGetQuery(db, "SELECT Author FROM Content WHERE ID = 6")
print(a)
class(a)
a[1]
class(a[1])
class(a[1,1])
paste("SELECT ", field, " FROM Content WHERE ID = ", ID, sep = "")
old <- (dbGetQuery(db, paste("SELECT ", field, " FROM Content WHERE ID = ", ID, sep = "")))[1,1]
old
paste("You replaced the ", field, " ", old, " with ",edit, ".")
print(paste("You replaced the ", field, " ", old, " with ",edit, ".", sep = ""))
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/edit_table.R', echo=TRUE)
edit_row(71, "category", "business")
edit_row(73, "category", "business")
View(dbReadTable(db, "Content"))
add_quote_manual("Whether you think you can or you think you can't, you're right.")
View(dbReadTable(db, "Content"))
dbListFields(db, "Content")
previous <- dbGetQuery(db, "SELECT ID FROM Content WHERE ID = (SELECT MAX(ID) FROM Content)")
previous
remove_row(73)
View(dbReadTable(db, "Content"))
previous <- dbGetQuery(db, "SELECT ID FROM Content WHERE ID = (SELECT MAX(ID) FROM Content)")
previous
class(previous)
class(previous[1,1])
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/add_quote.R', echo=TRUE)
add_quote_manual("Dreaming, after all, is a form of planning.", "business", "Gloria Steinem")
View(dbReadTable(db, "Content"))
add_quote_manual("If you have everything under control, you're not moving fast enough.", "sports", "Mario Andretti")
add_quote_manual("There are no ordinary moments")
View(dbReadTable(db, "Content"))
edit_row(107, "Author", "Cheryl Strayed")
edit_row(84, "Category", "travel")
add_quote_manual("Drinking nature is an unquenchable thirst.", "nature", "Berri Clove")
View(dbReadTable(db, "Content"))
edit_row(113, "Text", "YOu have betwiched me body and soul.")
add_quote_manual("I am an arthitect of days that haven't happened yet.", "travel", "James Bay")
View(dbReadTable(db, "Content"))
edit_row(123, "Text", "Action is the foundation of all success.")
version
add_quote_manual("The wide world is all about you","travel", "The Lord of the Rings")
quote_imagerec("http://untappedcities.wpengine.netdna-cdn.com/wp-content/uploads/2013/05/rain-room-nyc-untapped-cities-jane-hu-2.jpg")
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_imagerec.R', echo=TRUE)
quote_imagerec("http://untappedcities.wpengine.netdna-cdn.com/wp-content/uploads/2013/05/rain-room-nyc-untapped-cities-jane-hu-2.jpg")
quote_imagerec("http://cdn.wallpapersafari.com/12/33/BWKuaG.jpg")
quote_imagerec("http://images.iop.org/objects/phw/news/16/2/31/rain.jpg")
add_quote_manual("No water, No life. No blue, No green.", "", "Sylvia Earle")
View(dbReadTable(db, "Content"))
edit_row(182, "Category", "")
edit_row(182, "Category", "nature")
edit_row(183, "Category", "")
add_quote_manual("We build too many walls and not enough bridges.", "wisdom", "Issac Newton")
quote_imagerec("https://hd.unsplash.com/photo-1467321638755-7246fd0dc1f3")
quote_imagerec("https://hd.unsplash.com/photo-1468245856972-a0333f3f8293")
quote_imagerec("https://hd.unsplash.com/photo-1464740042629-b78a46b310ae")
quote_imagerec("https://hd.unsplash.com/photo-1462331940025-496dfbfc7564")
source('C:/Users/maggie.lou/Dropbox/MyDocuments/NU 2019/Data Mining/Projects/Over/Quote_Generation/quote_generation.R', echo=TRUE)
r <- plumb("quote_generation.R")
r$run(port = 8000)
quote_imagerec("https://upload.wikimedia.org/wikipedia/commons/5/57/Campilhas_March_2015-1a.jpg")
r$run(port = 8000)
